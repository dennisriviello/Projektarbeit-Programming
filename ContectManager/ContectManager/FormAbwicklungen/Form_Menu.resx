<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>